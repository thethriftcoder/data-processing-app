services:
  db:
    image: postgres:17
    container_name: data_processing_db
    restart: unless-stopped
    shm_size: 256mb
    ports:
      - "5432:5432"
    volumes:
      - ${POSTGRES_VOLUME}:/var/lib/postgresql/data 
    environment:
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - PGUSER=postgres
      - POSTGRES_DB=data_processing_app
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 1s
      timeout: 5s
      retries: 10

  adminer:
    image: adminer
    container_name: data_processing_adminer
    restart: unless-stopped
    ports:
      - 8082:8080

  cache:
    image: redis:latest
    container_name: data_processing_cache
    restart: unless-stopped
    ports:
      - "6379"
    volumes:
      - ${REDIS_VOLUME}:/data
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - REDIS_PORT=6379
    command:
      - "--requirepass ${REDIS_PASSWORD}"

  worker:
    build:
      context: .
      dockerfile: ./Dockerfile
    container_name: data_processing_worker
    restart: unless-stopped
    command: celery -A app.config.celery.app worker --loglevel=info
    environment:
      - DB_NAME=data_processing_app
      - DB_HOST=db
      - DB_USER=postgres
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_PORT=5432
      - USER_NAME=${USER_NAME}
      - USER_PASSWORD=${USER_PASSWORD}
      - REDIS_HOST=cache
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - REDIS_PORT=6379
    env_file:
      - .env
    depends_on:
      - cache

  app:
    build: .
    container_name: data_processing_app
    restart: unless-stopped
    environment:
      - DB_NAME=data_processing_app
      - DB_HOST=db
      - DB_USER=postgres
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_PORT=5432
      - USER_NAME=${USER_NAME}
      - USER_PASSWORD=${USER_PASSWORD}
      - REDIS_HOST=cache
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - REDIS_PORT=6379
    env_file:
      - .env
    ports:
      - "8000:8000"
    depends_on:
      - db
      - cache
      - worker
    